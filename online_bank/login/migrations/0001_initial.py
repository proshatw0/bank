# Generated by Django 4.2.13 on 2024-06-02 19:41

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('surname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=15, unique=True, verbose_name='Телефон')),
                ('email', models.CharField(max_length=50, unique=True, verbose_name='Электронная почта')),
                ('password', models.CharField(max_length=128, verbose_name='Пароль')),
                ('pin', models.CharField(max_length=4, null=True, verbose_name='ПИН-КОД')),
                ('telegram', models.BooleanField(default=False, verbose_name='Telegram')),
                ('input_attempts', models.IntegerField(default=0, verbose_name='Количество вводов')),
                ('passport_series', models.CharField(max_length=4, verbose_name='Серия паспорта')),
                ('passport_number', models.CharField(max_length=6, verbose_name='Номер паспорта')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('passport_issue_date', models.DateField(verbose_name='Дата выдачи паспорта')),
                ('passport_issuer', models.CharField(max_length=100, verbose_name='Кем выдан паспорт')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
